{"version":3,"sources":["Component/Header/style.js","Component/Header/index.js","Component/Navbar/index.js","Component/Cards/style.js","Component/Cards/index.js","App.js","serviceWorker.js","index.js"],"names":["HeaderSection","styled","header","Overlay","div","CoverText","Header","className","expand","Brand","href","src","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Navbar","CardSection","section","TileDesc","Span","span","CardFooter","Cards","props","fetchData","axios","get","params","access_token","then","response","setState","data","state","catch","error","console","log","onSave","val","hasMore","this","dataLength","length","next","loader","map","item","index","Card","Row","Col","md","Img","profile_photo_urls","original","Body","Title","type","value","title","status","applications_count","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bebed0d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const HeaderSection = styled.header`\r\nbackground-image: url(https://cdn-expa.aiesec.org/assets/images/aiesec_org/search-cover.jpg);\r\nheight: 40vh;\r\nwidth: 100%;\r\nbackground-size: cover;\r\nbackground-repeat: no-repeat;\r\nbackground-position: top;\r\n\r\n.navbar {\r\n    .aiesec-logo {\r\n        width: 180px;\r\n        line-height: 60px;\r\n    }\r\n}\r\n\r\n.navbar-nav {\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.nav-link {\r\n    margin-right: 30px;\r\n    color: #FFF !important;\r\n    padding: 4px 1rem ;\r\n}\r\n\r\n.btn-nav-link {\r\n    background-color: #037ef3;\r\n    padding: 3px;\r\n    margin-top: 5px;\r\n}\r\n\r\n.border-right-white {\r\n    border-right: 2px solid #fff;\r\n}\r\n`;\r\n\r\n\r\nexport const Overlay = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0,0,0,.5);\r\n    position: relative;\r\n`;\r\n\r\nexport const CoverText = styled.div`\r\n    position: absolute;\r\n    top: 35%;\r\n    left: 0;\r\n    right: 0;\r\n    text-align: center;\r\n    font-size: 52px;\r\n    color: #fff;\r\n`;","import React from 'react';\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { HeaderSection, Overlay, CoverText } from './style.js';\r\n\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderSection>\r\n        <Overlay>\r\n            <div className=\"container-fluid\">\r\n\r\n                <Navbar expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">\r\n                        <img src=\"https://cdn-expa.aiesec.org/assets/images/aiesec-logo-white-blue.svg\" \r\n                        className=\"aiesec-logo\" alt=\"Aiesec Logo\" />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#home\">About us</Nav.Link>\r\n                            <Nav.Link className=\"border-right-white\" href=\"#\">Help</Nav.Link>\r\n                            <Nav.Link href=\"#\">For Employers</Nav.Link>\r\n                            <Nav.Link className=\"btn-nav-link\" href=\"#\">Search</Nav.Link>\r\n                            <Nav.Link href=\"#\">Sign Up</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <CoverText>\r\n                    <p>Your experience begins here...</p>\r\n                </CoverText>\r\n            </div>\r\n        </Overlay>\r\n    </HeaderSection>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className = \"App\" >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import styled from 'styled-components';\r\n\r\nexport const CardSection = styled.section`\r\n    font-size: 16px;\r\n    margin: 40px auto;\r\n    a {\r\n        color: #555;\r\n        &:hover {\r\n            text-decoration: none;\r\n        }\r\n    }\r\n    .card {\r\n        max-width: 90% !important;\r\n        margin-bottom: 25px;\r\n    }\r\n    .card-img {\r\n        width: 164px;\r\n        height: 100%;\r\n    }\r\n\r\n    .card-body {\r\n        text-align: start;\r\n    }\r\n\r\n    .dots {\r\n        width: 3px;\r\n        height: 3px;\r\n        display: inline-block;\r\n        border-radius: 50%;\r\n        border: 1px solid;\r\n        background-color: #9b9b9b;\r\n        vertical-align: middle;\r\n    }\r\n`;\r\n\r\nexport const TileDesc = styled.div`\r\n    color: #4a4a4a;\r\n    font-size: 14px;\r\n    opacity: .75;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    margin-right: 10px;\r\n`;\r\n\r\nexport const CardFooter = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 35px;\r\n    .company-logo {\r\n        width: 20px;\r\n        height: 20px;\r\n        border-radius: 50%;\r\n        margin-right: 5px;\r\n    }\r\n    .com-name {\r\n        display: inline;\r\n    }\r\n`;","import React , { Component } from 'react';\r\n\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport EdiText from 'react-editext'\r\nimport axios from 'axios';\r\n\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\n\r\n// Imort Styled Component\r\nimport { CardSection, TileDesc, Span, CardFooter } from './style.js';\r\n\r\nclass Cards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        data: [],\r\n        hasMore: true\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData = () => {\r\n    axios\r\n    .get(\"https://api-staging.aiesec.org/v2/opportunities\", {\r\n      params: {\r\n        access_token:\r\n          \"dd0df21c8af5d929dff19f74506c4a8153d7acd34306b9761fd4a57cfa1d483c\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.setState({ \r\n        data: [...this.state.data, ...response.data.data]\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  onSave = val => {\r\n    console.log('Edited Value -> ', val)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CardSection>\r\n        <InfiniteScroll\r\n          dataLength={this.state.data.length}\r\n          next={this.fetchData}\r\n          hasMore={this.state.hasMore}\r\n          loader={<h4>Loading...</h4>}\r\n        >\r\n          {this.state.data.map((item, index) => (\r\n            <div className=\"container\">\r\n              <Card>\r\n                  <a href=\"#\">\r\n                    <Row>\r\n                        <Col md={2}>\r\n                          <Card.Img src={item.profile_photo_urls.original} alt=\"Card image\" />\r\n                        </Col>\r\n                        <Col md={10}>\r\n                          <Card.Body>\r\n                            <Card.Title>\r\n                            <EdiText\r\n                              type=\"text\"\r\n                              value={item.title}\r\n                              onSave={this.onSave}\r\n                            />\r\n                            </Card.Title>\r\n                            <TileDesc>\r\n                                <Span>{item.status}</Span>\r\n                                <Span className=\"dots\"></Span>\r\n                                <Span>10 Feb 2020</Span>\r\n                                <Span className=\"dots\"></Span>\r\n                                <Span>6 weeks</Span>\r\n                            </TileDesc>\r\n                            <CardFooter>\r\n                                <div className=\"company-name\">\r\n                                    <img className=\"company-logo\" src={item.profile_photo_urls.original} alt=\"Myself My World Bursa image\" />\r\n                                    <TileDesc className=\"com-name\">{item.title}</TileDesc>\r\n                                </div>\r\n\r\n                                <div className=\"counter\">\r\n                                    <TileDesc><i className=\"fa fa-user\"></i>  {item.applications_count}</TileDesc>\r\n                                </div>\r\n                            </CardFooter>\r\n                          </Card.Body>\r\n                        </Col>\r\n                    </Row>\r\n                  </a>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </InfiniteScroll>\r\n    </CardSection>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Cards;","import React , { Component } from 'react';\nimport './App.css';\n\n// Import Components\nimport Header from './Component/Header';\nimport Navbar from './Component/Navbar';\nimport Cards from './Component/Cards';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* Header */}\n        <Header />\n\n        {/* Navbar */}\n        <Navbar />\n\n        {/* Cards */}\n        <Cards />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}